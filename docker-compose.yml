version: "3.9"

services:
  db:
    image: postgres:16-alpine
    container_name: app_postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      POSTGRES_USER: ${POSTGRES_USER:-app}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-app}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 10

  web:
    build: .
    container_name: app_fastapi
    command: /bin/sh -c "RUNNING_IN_DOCKER=1 alembic upgrade head && uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"
    environment:
      # Fallback if .env missing
      DATABASE_URL: ${DATABASE_URL:-postgresql+asyncpg://app:app@db:5432/app}
      RABBITMQ_URL: ${RABBITMQ_URL:-amqp://guest:guest@rabbitmq/}
      STORAGE_DIR: ${STORAGE_DIR:-/app/storage}
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - ./:/app

  worker:
    build: .
    container_name: app_worker
    command: /bin/sh -c "RUNNING_IN_DOCKER=1 alembic upgrade head && python -m app.worker"
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgresql+asyncpg://app:app@db:5432/app}
      RABBITMQ_URL: ${RABBITMQ_URL:-amqp://guest:guest@rabbitmq/}
      STORAGE_DIR: ${STORAGE_DIR:-/app/storage}
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./:/app

  rabbitmq:
    image: rabbitmq:3.13-management-alpine
    container_name: app_rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 5s
      timeout: 5s
      retries: 10

volumes:
  db_data:
  storage_data:
